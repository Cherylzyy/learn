# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'learn' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for learn
  # https://github.com/AFNetworking/AFNetworking.git
  #pod 'AFNetworking', '~> 4.0'
  
  # https://github.com/Tencent/MLeaksFinder.git
  #pod 'MLeaksFinder'

  target 'learnTests' do
    inherit! :search_paths
    # Pods for testing
  end

  target 'learnUITests' do
    # Pods for testing
  end

end

post_install do|installer|
   #解决问题一
   find_and_replace("Pods/FBRetainCycleDetector/FBRetainCycleDetector/Layout/Classes/FBClassStrongLayout.mm",
       "layoutCache[currentClass] = ivars;", "layoutCache[(id)currentClass] = ivars;")
   #解决问题二
   find_and_replace("Pods/FBRetainCycleDetector/fishhook/fishhook.c",
   "indirect_symbol_bindings[i] = cur->rebindings[j].replacement;", "if (i < (sizeof(indirect_symbol_bindings) /
        sizeof(indirect_symbol_bindings[0]))) { \n indirect_symbol_bindings[i]=cur->rebindings[j].replacement; \n }")
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
    FileUtils.chmod("+w",name) #add
      text = File.read(name)
      replace = text.gsub(findstr,replacestr)
      if text != replace
         puts "Fix: " + name
         File.open(name, "w") { |file| file.puts replace }
         STDOUT.flush
      end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end


